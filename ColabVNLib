{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"private_outputs":true,"authorship_tag":"ABX9TyMlPqa1ivlQu29oUM5l/V5k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#TODO"],"metadata":{"id":"KPx5SeRzXN94"}},{"cell_type":"markdown","source":["Insert variable checking into printText function\n","Variables in the form of [VarName]\n"],"metadata":{"id":"HEk9PFkoXREW"}},{"cell_type":"markdown","source":["## Libraries"],"metadata":{"id":"KuLVXgzB4vIA"}},{"cell_type":"code","source":["import time\n","import re"],"metadata":{"id":"ulgGBU0u4037"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Variables"],"metadata":{"id":"1QYgn9j06pys"}},{"cell_type":"code","source":["global SpeedFactor\n","SpeedFactor = 1\n","global MasterVolume\n","MasterVolume = 0\n","global Substitutions\n","Substitutions = []\n","PlayerChoices = []"],"metadata":{"id":"uOYnUvIv6rqH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Functions"],"metadata":{"id":"FRubYL5f3y0N"}},{"cell_type":"markdown","source":["## SceneRun"],"metadata":{"id":"FfBdMey8nTWg"}},{"cell_type":"code","source":["def SceneRun(SceneDatabase = \"0\"):\n","  if SceneDatabase == \"0\":\n","    print(\"SceneRun Error: No database provided.\")\n","    return\n","\n","  Length = len(SceneDatabase)\n","  for i in range(Length):\n","    MessageRun(i, SceneDatabase)"],"metadata":{"id":"9Ckg3OA0nb-4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## TextSubstitutions"],"metadata":{"id":"ghsy1pEDKvdq"}},{"cell_type":"code","source":["def TextSubstitutions(text: str, substitutions: list) -> str:\n","  subs_dict = dict(substitutions)\n","  def replacer(match):\n","    var_name = match.group(1)  # text inside [[ ]]\n","    if var_name in subs_dict:\n","      return subs_dict[var_name]\n","    else:\n","      print(f\"TextSubstitution Error: Variable '{var_name}' not defined.\")\n","      return match.group(0)  # keep [[var_name]] in the text\n","\n","  return re.sub(r\"\\[\\[(.*?)\\]\\]\", replacer, text)"],"metadata":{"id":"EbfW_jGFKzec"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## MessageRun"],"metadata":{"id":"0J84izEK38u0"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"rmtIRFcX0q7b"},"outputs":[],"source":["def MessageRun(SceneID = 0, SceneDatabase = \"0\"):\n","  global SpeedFactor\n","  if SceneDatabase == \"0\":\n","    print(\"MessageRun Error: No database provided.\")\n","    return\n","\n","  print(\"\\n\")\n","  # print(\"Run Scene: \" + str(SceneID))\n","  print(str(SceneDatabase[SceneID][0]) + \":\")\n","  time.sleep(0.1/SpeedFactor)\n","  Length = len(SceneDatabase[SceneID][1])\n","  for i in range(Length):\n","    PrintText(SceneBreakdown(SceneID, SceneDatabase, i))\n","\n","  time.sleep(0.2/SpeedFactor)\n","\n","\n"]},{"cell_type":"markdown","source":["## PrintText"],"metadata":{"id":"AGIatxtQ362Q"}},{"cell_type":"code","source":["def PrintText(Couple):\n","  if Couple == None:\n","    print(\"PrintText Error: Variable None\")\n","    return\n","  else:\n","    Text, Speed = Couple\n","    global SpeedFactor\n","    global Substitutions\n","    global PlayerChoices\n","\n","    Text = TextSubstitutions(Text, Substitutions)\n","\n","    pattern = re.compile(r\"\\(\\((.*?)\\)\\)\")\n","    matchesR = pattern.findall(Text)\n","    Text = pattern.sub(\"\", Text)\n","\n","    pattern = re.compile(r\"\\{\\{(.*?)\\}\\}\")\n","    matchesB = pattern.findall(Text)\n","    Text = pattern.sub(\"\", Text)\n","\n","    Text = str(Text)\n","\n","    if Text == None:\n","      print(\"PrintText Error: Text returning 'None'\")\n","    Delay = 1 / (10 * Speed * SpeedFactor)\n","    Line = \"\"\n","    Text = Text + \"\\n\"\n","    for char in Text:\n","      if not (char == \" \"):\n","        time.sleep(Delay)\n","      Line += char\n","      print(f\"\\r{Line}\", end = \"\", flush = True)\n","    time.sleep(0.02/SpeedFactor)\n","\n","  # Text input\n","  if matchesR != []:\n","    Input = input(\"> \")\n","    Substitutions.append((str(matchesR[0]),str(Input)))\n","\n","  # Story Choice\n","  if matchesB != []:\n","    Blen = len(matchesB)-1\n","    print(\"\\n\")\n","    if Blen < 2:\n","      print(\"PrintText Error: Not enough options.\")\n","\n","    for i in range(Blen):\n","      print(matchesB[i+1])\n","    print(\"Enter your choice (input the letter):\\n\")\n","\n","    ChoiceInputted = False\n","    while ChoiceInputted == False:\n","      Input = input(\"\\n> \")\n","      if len(Input) > 1:\n","        print(\"Please input a letter.\")\n","        continue\n","      if (65<=ord(Input[0])<=(65+Blen-1)) or (97<=ord(Input[0])<=(97+Blen-1)):\n","        if ord(Input[0]) >= 97:\n","          Selection = ord(Input[0]) - 97\n","        else:\n","          Selection = ord(Input[0]) - 65\n","        ChoiceInputted = True\n","        continue\n","      else:\n","        print(\"Please input a letter in the valid range.\")\n","\n","    PlayerChoices.append((matchesB[0], (int(Selection)+1)))\n"],"metadata":{"id":"CWVLzoa91wVC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Decision"],"metadata":{"id":"5JDtgLJkXVHO"}},{"cell_type":"code","source":["def Decision(options, text):\n","  for t, num in options:\n","    if t == text:\n","      return num\n","  print(f\"Decision Error: Item '{text}' not in string.\")"],"metadata":{"id":"X0fr99FjtcN4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## SceneBreakdown"],"metadata":{"id":"sHpch0wu6ZiB"}},{"cell_type":"code","source":["def SceneBreakdown(SceneID, SceneDatabase, LineNo):\n","  \"\"\"\n","  Scene ID =\n","  \"\"\"\n","  Length = len(SceneDatabase[SceneID][1]) - 1\n","  if LineNo > Length:\n","    print(\"SceneBreakdown error, Overflow\")\n","    return None\n","  else: return SceneDatabase[SceneID][1][LineNo]"],"metadata":{"id":"JPrnKYJ46dQB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ValueCheck"],"metadata":{"id":"twgE7xVPfXsq"}},{"cell_type":"code","source":["def ValueCheck(Val, Lower, Upper = None):\n","  if Upper == None:\n","    Upper = Lower\n","  Val = str(Val)\n","  if Val.isdigit():\n","    Value = int(Val)\n","  else:\n","    Value = None\n","    return Value\n","  if (Lower <= Value) and (Value <= Upper):\n","    return True\n","  else: return False"],"metadata":{"id":"kqhhvStVfaYx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## StartPage\n"],"metadata":{"id":"eG3kARgkV0lM"}},{"cell_type":"code","source":["def StartPage():\n","\n","  global Game\n","\n","  Option = []\n","  Option.append(\"1: Continue\")\n","  Option.append(\"2: Load Save\")\n","  Option.append(\"3: New Game\")\n","  Option.append(\"4: Gallery\")\n","  Option.append(\"5: Settings\")\n","  Option.append(\"6: Quit\")\n","\n","  print(\"\\n\")\n","  for i in range(len(Option)):\n","    print(Option[i])\n","\n","  Inputting = True\n","  while Inputting == True:\n","    Input = input(\"\\n> \")\n","    Check = ValueCheck(Input, 47, 54)\n","    if Check == True:\n","      Inputting = False\n","    else:\n","      print(\"Please enter a valid value.\")\n","\n","  if Input == 1:\n","    pass\n","  elif Input == 2:\n","    pass\n","  elif Input == 3:\n","    pass\n","  elif Input == 4:\n","    pass\n","  elif Input == 5:\n","    StartPageSettings()\n","  elif Input == 6:\n","    StartPageQuit()\n","\n"],"metadata":{"id":"45MDVqD3V3H0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 5: Settings"],"metadata":{"id":"8JfeXX0KpMpg"}},{"cell_type":"code","source":["def StartPageSettings():\n","  SettingsPage = True\n","\n","  # Globals\n","\n","  global SpeedFactor\n","  global MasterVolume\n","\n","  while SettingsPage == True:\n","\n","      # Settings\n","\n","    Settings = []\n","    Settings.append((\"1: Text Speed: \", SpeedFactor))\n","    Settings.append((\"2: Master Volume: \", MasterVolume))\n","    Settings.append((\"3: Text Volume: \", 0))\n","    Settings.append((\"4: Character Volume: \", 0))\n","    Settings.append((\"5: Close Menu.\"))\n","\n","    print(\"\\n\")\n","    for i in range(len(Settings)):\n","      print(Settings[i][0] + str(Settings[i][1]))\n","\n","    SettingsChoiceInput = input(\"\\n> \")\n","    Check = ValueCheck(SettingsChoiceInput, 1, 4)\n","    print(Check)\n","    print(SettingsChoiceInput)\n","    if Check == False:\n","      print(\"Please enter a valid value.\")\n","      continue\n","\n","    # Text Speed\n","    elif int(SettingsChoiceInput) == 1:\n","      print(\"\\nText Speed = \" + str(Settings[0][1]) + \"/10\")\n","\n","      SettingsInputting = True\n","      while SettingsInputting == True:\n","        SettingsInput = input(\"Text Speed: \")\n","        SettingsCheck = ValueCheck(SettingsInput, 1, 10)\n","\n","        if SettingsCheck == True:\n","          SpeedFactor = SettingsInput\n","          SettingsInputting = False\n","        else:\n","          print(\"Please enter a valid value.\")\n","          continue\n","\n","    # Master Volume\n","    elif int(SettingsChoiceInput) == 2:\n","      print(\"\\nMaster Volume = \" + str(Settings[1][1]) + \"/100\")\n","\n","      SettingsInputting = True\n","      while SettingsInputting == True:\n","        SettingsInput = input(\"Master Volume: \")\n","        SettingsCheck = ValueCheck(SettingsInput, 1, 100)\n","\n","        if SettingsCheck == True:\n","          MasterVolume = SettingsInput\n","          SettingsInputting = False\n","        else:\n","          print(\"Please enter a valid value.\")\n","          continue\n","\n","# StartPageSettings()"],"metadata":{"id":"zBq5LcoBpOgc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6: Quit"],"metadata":{"id":"lBSY6SkPjQlS"}},{"cell_type":"code","source":["def StartPageQuit():\n","  global Game\n","  Game == False"],"metadata":{"id":"aD-Ukak4jS81"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## GameLoop"],"metadata":{"id":"yhFOcuLHePjA"}},{"cell_type":"code","source":["def GameLoop():\n","  global Game\n","  Game = True\n","  while Game == True:\n","\n","    pass"],"metadata":{"id":"8KiWPGfNeRK1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# StartPage()"],"metadata":{"id":"UmnFJTwhWhUh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Scene"],"metadata":{"id":"mZpdsN0d6qco"}},{"cell_type":"markdown","source":["## TestScene"],"metadata":{"id":"RVQfOKBI2N-M"}},{"cell_type":"code","source":["help(SceneBreakdown)"],"metadata":{"id":"5rEO5wMA4P5u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","\n","TestOne = []\n","TestOne.append((\"Archie\", ((\"Hello\", 2.5), (\"My name is Archie\", 2.5), (\"How are you doing?\", 2.5), (\"What is your name?\", 2.5))))\n","TestOne.append((\"Marcus\", ((\"Hey, my name is Marcus\", 2.5), (\"I'm doing well, thank you.\", 2.5))))\n","\n","TestTwo = []\n","TestTwo.append((\"Carlos\", ((\"Hey Archie!\", 2), (\"What do you call a Mexican who has lost his car?\", 2))))\n","TestTwo.append((\"Archie\", ((\"What?\", 2),)))\n","TestTwo.append((\"Carlos\", ((\"Carlos\", 2),)))\n","TestTwo.append((\"Archie\", ((\"...\", 0.25), (\"Do you need a lift?\", 1))))\n","TestTwo.append((\"Carlos\", ((\"Yeah.\", 2.5),)))\n","\n","TestThree = []\n","TestThree.append((\"Archie\", ((\"Hello!\", 2.5),\n","                             (\"What's your name?((name))\", 2.5))))\n","TestThree.append((\"Archie\", ((\"Nice to meet you [[name]]!\", 2.5),\n","                             (\"Do you want to go to the park or go shopping?{{C1PS}}{{A: Go to the park.}}{{B: Go shopping.}}\", 2.5))))\n","\n","Substitutions = []\n","PlayerChoices = []\n","\n","\n","\n","SceneRun(TestThree)\n","\n","print(Decision(PlayerChoices, \"C1PS\"))\n","\n","if Decision(PlayerChoices, \"C1PS\") == 1:\n","  print(\"Go to park\")\n","else:\n","  print(\"go shopping\")\n","\n","'''"],"metadata":{"id":"QYCF5Hxe6rXL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Scene 1:"],"metadata":{"id":"wnx8BYKa2QuO"}},{"cell_type":"code","source":["'''\n","\n","Scene1_1 = [] # Waking up\n","Scene1_1.append((\"Narrator\", ((\"Light shines through your blinds as you begin to wake up.\", 2.5),\n","                              (\"A light yellow spot illuminates your vision, the sun peeking through the gaps just to blind you.\", 2.5),\n","                              (\"Stumbling slowly out of your accommodation’s top bunk, you take time to take in the noise of the world.\", 2.5),)))\n","Scene1_1.append((\"Narrator\", ((\"But there is none.\", 2.5),)))\n","Scene1_1.append((\"Narrator\", ((\"It’s so strangely quiet that you cannot shake the feeling that the world has woken you.\", 2.5),\n","                              (\"That it’s warned you that something has gone wrong.\", 2.5),\n","                              (\"And that it has.\",2.5),)))\n","Scene1_1.append((\"Narrator\", ((\"Reaching to your bedside table, you string your memory shards around your neck, letting them sway gently as they rest against your skin.\", 2.5),\n","                              (\"But you don’t remember these memories.\", 2.5),\n","                              (\"In fact, none of them are yours. \", 2.5),\n","                              (\"Your mind is suddenly filled with the thoughts and experiences of someone else.\", 2.5),)))\n","\n","\n","# SceneRun(Scene1_1)\n","\n","'''"],"metadata":{"id":"yCce09Yh8arC"},"execution_count":null,"outputs":[]}]}